using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;

namespace LYA
{
    public class Sintactico
    {
        public List<Error> listaError; // lista de errores

        public List<Token> listaTokens;  // va ser una copia de la lista de tokens original   ***** COLA  *****

        private int[] listaSintactico = new int[100]; // analizador sintactico LIFO    **** PILA *****

        public bool error = false; // bandera de errores

        bool revision = false;   // bandera para decidir si sigo analisando o me salgo.

        int punteroLexico = 0;      // punteros de la lista de tokens y de la lista del analizador sintactico
        int punteroSintactico = 1;

        int intentosRecuperar;
        TipoRepecuracion tipoRecuperacion;
        enum TipoRepecuracion
        {
            Ninguna,
            Falta,
            Sobra,
            Diferentes,
            Urgencia,
            NoMas
        }

        public int[,] MatrizTransicionSintantico = new int[,] {
                /*"1,000",<s>*/{-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,1,-600,-600,-600,-600,-600,-600,1,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,1,-600,-600,1,1,1,1,-600,1,-600,-600,-600,-600,-600,-600,-600,1,-600,-600,1,-600,-600,-600,-600},
                /*"1,001",<program>*/{-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,2,-600,-600,-600,-600,-600,-600,2,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,2,-600,-600,2,2,2,2,-600,2,-600,-600,-600,-600,-600,-600,-600,2,-600,-600,2,-600,-600,-600,-600},
                /*"1,002",<paquete>*/{-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,3,-600,-600,-600,-600,-600,-600,3,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,3,-600,-600,4,3,3,3,-600,3,-600,-600,-600,-600,-600,-600,-600,3,-600,-600,3,-600,-600,-600,-600},
                /*"1,003",<pack>*/{-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,5,-600,6,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600},
                /*"1,004",<libreria>*/{-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,7,-600,-600,-600,-600,-600,-600,7,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,8,-600,-600,7,7,7,7,-600,7,-600,-600,-600,-600,-600,-600,-600,7,-600,-600,7,-600,-600,-600,-600},
                /*"1,005",<singleLib>*/{-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,9,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600},
                /*"1,006",<lib>*/{-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,10,-600,11,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600},
                /*"1,007",<clases>*/{-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,12,-600,-600,-600,-600,-600,-600,12,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,12,12,12,-600,12,-600,-600,-600,-600,-600,-600,-600,12,-600,-600,12,-600,-600,-600,-600},
                /*"1,008",<mulClases>*/{-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,14,-600,-600,-600,-600,-600,-600,14,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,14,14,14,-600,14,-600,-600,-600,-600,-600,-600,-600,14,-600,-600,14,-600,-600,-600,13},
                /*"1,009",<clase>*/{-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,15,-600,-600,-600,-600,-600,-600,15,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,15,15,15,-600,15,-600,-600,-600,-600,-600,-600,-600,15,-600,-600,15,-600,-600,-600,-600},
                /*"1,010",<alcance>*/{-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,19,-600,-600,-600,-600,-600,-600,16,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,17,21,18,-600,20,-600,-600,-600,-600,-600,-600,-600,24,-600,-600,25,-600,-600,-600,-600},
                /*"1,011",<herencia>*/{-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,27,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,28,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600},
                /*"1,012",<codigo>*/{29,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,29,-600,29,-600,-600,-600,29,-600,29,-600,-600,-600,29,-600,-600,29,-600,29,-600,-600,-600,29,-600,-600,29,29,29,-600,29,-600,-600,-600,-600,29,-600,29,29,-600,-600,29,29,-600,-600,29},
                /*"1,013",<codigos>*/{31,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,30,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,31,-600,31,-600,-600,-600,31,-600,31,-600,-600,-600,31,-600,-600,31,-600,31,-600,-600,-600,31,-600,-600,31,31,31,-600,31,-600,-600,-600,-600,31,-600,31,31,-600,-600,31,31,-600,-600,30},
                /*"1,014",<comandos>*/{33,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,32,-600,32,-600,-600,-600,32,-600,32,-600,-600,-600,32,-600,-600,32,-600,32,-600,-600,-600,32,-600,-600,32,32,32,-600,32,-600,-600,-600,-600,32,-600,32,32,-600,-600,32,32,-600,-600,-600},
                /*"1,015",<metodos>*/{34,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,34,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,35,-600,35,-600,-600,-600,35,-600,35,-600,-600,-600,35,-600,-600,35,-600,35,-600,-600,-600,35,-600,-600,35,35,35,-600,35,-600,-600,-600,-600,35,-600,35,35,-600,-600,35,35,-600,-600,-600},
                /*"1,016",<metodo>*/{-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,36,-600,36,-600,-600,-600,36,-600,36,-600,-600,-600,36,-600,-600,36,-600,36,-600,-600,-600,36,-600,-600,36,36,36,-600,36,-600,-600,-600,-600,36,-600,36,36,-600,-600,36,36,-600,-600,-600},
                /*"1,017",<mets>*/{37,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,38,-600,-600,-600,-600,-600,-600,37,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600},
                /*"1,018",<parametros>*/{-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,39,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,40,-600,-600,-600,40,-600,-600,-600,-600,-600,40,-600,-600,-600,-600,40,-600,-600,-600,40,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,40,-600,-600,-600,-600,40,-600,-600,-600},
                /*"1,019",<parametro>*/{-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,41,-600,-600,-600,41,-600,-600,-600,-600,-600,41,-600,-600,-600,-600,41,-600,-600,-600,41,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,41,-600,-600,-600,-600,41,-600,-600,-600},
                /*"1,020",<mulParam>*/{-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,42,43,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600},
                /*"1,021",<tipado>*/{-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,48,-600,-600,-600,49,-600,-600,-600,-600,-600,46,-600,-600,-600,-600,47,-600,-600,-600,44,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,50,-600,-600,-600,-600,45,-600,-600,-600},
                /*"1,022",<variables>*/{-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,51,-600,-600,51,-600,-600,-600,-600,-600,-600,52,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600},
                /*"1,023",<variable>*/{-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,53,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600},
                /*"1,024",<inicia>*/{-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,54,-600,-600,-600,55,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600},
                /*"1,025",<multiVar>*/{-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,57,56,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600},
                /*"1,026",<invocacion>*/{59,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,58,-600,58,-600,-600,-600,58,-600,58,-600,-600,-600,58,-600,-600,58,-600,58,-600,-600,-600,58,-600,-600,58,58,58,-600,58,-600,-600,-600,-600,58,-600,58,58,-600,-600,58,58,-600,-600,-600},
                /*"1,027",<invocaVar>*/{-600,-600,-600,-600,-600,60,60,60,60,60,60,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,61,-600,-600,60,-600,61,-600,60,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600},
                /*"1,028",<invAtrib>*/{-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,62,-600,-600,-600,-600,63,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600},
                /*"1,029",<invParams>*/{64,64,64,64,64,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,152,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600},
                /*"1,030",<mulInvParams>*/{-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,65,66,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600},
                /*"1,031",<asignaciones>*/{68,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,67,67,-600,-600,67,-600,-600,-600,-600,67,67,-600,-600,-600,-600,67,67,67,-600,67,-600,-600,-600,-600,-600,67,-600,67,68,-600,-600,-600,67,67,-600,67,-600,-600,67,-600,-600,-600},
                /*"1,032",<asignacion>*/{69,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,69,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600},
                /*"1,033",<this>*/{70,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,71,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600},
                /*"1,034",<invClases>*/{73,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,72,-600,-600,-600,-600,-600,-600,72,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600},
                /*"1,035",<valor>*/{74,74,74,74,74,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600},
                /*"1,036",<termino>*/{75,76,77,78,79,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600},
                /*"1,037",<operadores>*/{-600,-600,-600,-600,-600,81,81,81,81,81,81,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,80,-600,80,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600},
                /*"1,038",<operador>*/{-600,-600,-600,-600,-600,82,83,84,85,86,87,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600},
                /*"1,039",<sentencias>*/{89,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,88,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,89,89,-600,-600,89,-600,-600,89,-600,89,89,-600,-600,-600,-600,89,89,89,-600,89,-600,-600,-600,-600,-600,89,-600,89,89,-600,-600,-600,89,89,-600,89,-600,-600,89,-600,-600,-600},
                /*"1,040",<sentencia>*/{98,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,90,99,-600,-600,90,-600,-600,100,-600,93,90,-600,-600,-600,-600,90,92,91,-600,90,-600,-600,-600,-600,-600,97,-600,95,98,-600,-600,-600,96,90,-600,94,-600,-600,90,-600,-600,-600},
                /*"1,041",<varInternas>*/{101,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,101,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,102,101,-600,-600,102,-600,-600,101,-600,101,102,-600,-600,-600,-600,102,101,101,-600,102,-600,-600,-600,-600,-600,101,-600,101,101,-600,-600,-600,101,102,-600,101,-600,-600,102,-600,-600,-600},
                /*"1,042",<varInterna>*/{-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,103,-600,-600,-600,103,-600,-600,-600,-600,-600,103,-600,-600,-600,-600,103,-600,-600,-600,103,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,103,-600,-600,-600,-600,103,-600,-600,-600},
                /*"1,043",<if>*/{-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,104,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600},
                /*"1,044",<condicional>*/{105,105,105,105,105,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,105,105,-600},
                /*"1,045",<condFactor>*/{108,108,108,108,108,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,106,107,-600},
                /*"1,046",<termCond>*/{-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600},
                /*"1,047",<oprel>*/{-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,111,112,114,113,115,116,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,109,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600},
               /* "1,048",<oplog>*/{-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,117,118,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600},
               /* "1,049",<else>*/{-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,119,119,-600,-600,119,-600,-600,119,-600,119,119,120,-600,-600,-600,119,199,119,-600,119,-600,-600,-600,-600,-600,119,-600,119,119,-600,-600,-600,119,119,-600,119,-600,-600,119,-600,-600,-600},
               /* "1,050",<elseCond>*/{-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,121,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,122,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600},
               /* "1,051",<for>*/{-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,123,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600},
               /* "1,052",<forAsig>*/{124,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,124,-600,-600,-600,124,-600,-600,-600,-600,-600,124,-600,-600,-600,-600,124,-600,-600,-600,124,-600,-600,-600,-600,-600,-600,-600,-600,124,-600,-600,-600,-600,124,-600,-600,-600,-600,124,-600,-600,-600},
               /* "1,053",<asigFor>*/{126,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,125,-600,-600,-600,125,-600,-600,-600,-600,-600,125,-600,-600,-600,-600,125,-600,-600,-600,125,-600,-600,-600,-600,-600,-600,-600,-600,126,-600,-600,-600,-600,125,-600,-600,-600,-600,125,-600,-600,-600},
               /* "1,054",<forInc>,*/{127,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600},
               /* "1,055",<inc>*/{-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,128,129,130,131,132,133,134,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600},
               /* "1,056",<while>*/{-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,135,-600,-600,-600,-600,-600,-600},
               /* "1,057",<do>*/{-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,136,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600},
               /* "1,058",<switch>*/{-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,137,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600},
               /* "1,059",<casos>*/{-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,138,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,139,-600,-600,-600,-600,-600,138,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600},
               /* "1,060",<caso>*/{-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,140,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600},
               /* "1,061",<default>*/{-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,141,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,141,-600,-600,-600,-600,-600,142,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600},
               /* "1,062",<try>*/{-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,143,-600,-600,-600,-600,-600,-600,-600,-600,-600},
               /* "1,063",<catch>*/{-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,144,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600 },
               /* "1,064",<catchs>*/{145,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,145,145,-600,146,145,-600,-600,145,-600,145,145,-600,-600,-600,145,145,145,145,-600,145,-600,-600,-600,-600,-600,-600,-600,145,145,-600,-600,-600,145,145,-600,145,-600,-600,145,-600,-600,-600},
               /* "1,065",<finally>*/{147,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,147,147,-600,147,147,-600,-600,147,-600,147,147,-600,-600,-600,148,147,147,147,-600,147,-600,-600,-600,-600,-600,-600,-600,147,147,-600,-600,-600,147,147,-600,147,-600,-600,147,-600,-600,-600},
               /* "1,066",<return>*/{-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,149,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600},
              /*  "1,067",<breaks>*/{-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,150,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600 },
              /*"1,068",<continues>*/{-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,151,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600,-600 }
        };

        public int[,] RepositorioReglas = new int[,]{
            /*,<s> ::=,*/{ 1001,-150,0,0,0,0,0,0,0,0,0,0 }
            /*,<program> ::= ,*/,{1007,1004,1002,-150,0,0,0,0,0,0,0,0}
            /*,<paquete> ::= ,*/,{-99,-150,0,0,0,0,0,0,0,0,0,0}
            /*,<paquete> ::= ,*/,{-37,1003,-1,-76,-150,0,0,0,0,0,0,0}
            /*,<pack> ::= ,*/,{-99,-150,0,0,0,0,0,0,0,0,0,0}
            /*,<pack> ::= ,*/,{1003,-1,-39,-150,0,0,0,0,0,0,0,0}
            /*,<libreria> ::= ,*/,{-99,-150,0,0,0,0,0,0,0,0,0,0}
            /*,<libreria> ::=,*/,{1004,1005,-150,0,0,0,0,0,0,0,0,0}
            /*,<singleLib> ::= ,*/,{-37,1006,-1,-69,-150,0,0,0,0,0,0,0}
            /*,<lib> ::= ,*/,{-99,-150,0,0,0,0,0,0,0,0,0,0}
            /*,<lib> ::=,*/,{1006,-1,-39,-150,0,0,0,0,0,0,0,0}
            /*,<clases> ::= ,*/,{1008,-150,0,0,0,0,0,0,0,0,0,0}
            /*,<mulClases> ::= ,*/,{-99,-150,0,0,0,0,0,0,0,0,0,0}
            /*,<mulClases> ::=,*/,{1008,1009,-150,0,0,0,0,0,0,0,0,0}
            /*,<clase> ::= ,*/,{-31,1012,-30,1011,-1,-53,1010,-150,0,0,0,0}
            /*,<alcance> ::= ,*/,{-99,-150,0,0,0,0,0,0,0,0,0,0}
            /*,<alcance> ::= ,*/,{-77,-150,0,0,0,0,0,0,0,0,0,0}
            /*,<alcance> ::=,*/,{-79,-150,0,0,0,0,0,0,0,0,0,0}
            /*,<alcance> ::=,*/,{-45,-150,0,0,0,0,0,0,0,0,0,0}
            /*,<alcance> ::= ,*/,{-82,-150,0,0,0,0,0,0,0,0,0,0}
            /*,<alcance> ::= ,*/,{-78,-150,0,0,0,0,0,0,0,0,0,0}
            /*,<alcance> ::= ,*/,{-62,-150,0,0,0,0,0,0,0,0,0,0}
            /*,<alcance> ::= ,*/,{-90,-150,0,0,0,0,0,0,0,0,0,0}
            /*,<alcance> ::= ,*/,{-93,-150,0,0,0,0,0,0,0,0,0,0}
            /*,<alcance> ::= ,*/,{-100,-150,0,0,0,0,0,0,0,0,0,0}
            /*,<alcance> ::= ,*/,{-54,-150,0,0,0,0,0,0,0,0,0,0}
            /*,<herencia> ::= ,*/,{-99,-150,0,0,0,0,0,0,0,0,0,0}
            /*,<herencia> ::= ,*/,{-1,-61,-150,0,0,0,0,0,0,0,0,0}
            /*,<codigo> ::= ,*/,{1013,-150,0,0,0,0,0,0,0,0,0,0}
            /*,<codigos> ::= ,*/,{-99,-150,0,0,0,0,0,0,0,0,0,0}
            /*,<codigos> ::= ,*/,{1013,1014,-150,0,0,0,0,0,0,0,0,0}
            /*,<comandos> ::=,*/,{1015,-150,0,0,0,0,0,0,0,0,0,0}
            /*,<comandos> ::= ,*/,{1026,-150,0,0,0,0,0,0,0,0,0,0}
            /*,<metodos> ::=,*/,{-99,-150,0,0,0,0,0,0,0,0,0,0}
            /*,<metodos>::= ,*/,{1015,1016,-150,0,0,0,0,0,0,0,0,0}
            /*,<metodo> ::=,*/,{1017,1022,1034,-1,1021,1010,-150,0,0,0,0,0}
            /*,<mets> ::= ,*/,{-99,-150,0,0,0,0,0,0,0,0,0,0}
            /*,<mets> ::= ,*/,{-31,1039,-39,-35,1018,-34,-150,0,0,0,0,0}
            /*,<parametros> ::=,*/,{-99,-150,0,0,0,0,0,0,0,0,0,0}
            /*,<parametros> ::=,*/,{1020,1019,-150,0,0,0,0,0,0,0,0,0}
            /*,<parametro> ::= ,*/,{-1,1021,-150,0,0,0,0,0,0,0,0,0}
            /*,<mulParam> ::=,*/,{-99,-150,0,0,0,0,0,0,0,0,0,0}
            /*,<mulParam> ::= ,*/,{1020,-1,1021,-36,-150,0,0,0,0,0,0,0}
            /*,<tipado> ::= ,*/,{-71,-150,0,0,0,0,0,0,0,0,0,0}
            /*,<tipado> ::=,*/,{-101,-150,0,0,0,0,0,0,0,0,0,0}
            /*,<tipado> ::=,*/,{-58,-150,0,0,0,0,0,0,0,0,0,0}
            /*,<tipado> ::= ,*/,{-64,-150,0,0,0,0,0,0,0,0,0,0}
            /*,<tipado> ::= ,*/,{-47,-150,0,0,0,0,0,0,0,0,0,0}
            /*,<tipado> ::= ,*/,{-52,-150,0,0,0,0,0,0,0,0,0,0}
            /*,<tipado> ::= ,*/,{-92,-150,0,0,0,0,0,0,0,0,0,0}
            /*,<variables> ::= ,*/,{-99,-150,0,0,0,0,0,0,0,0,0,0}
            /*,<variables> ::=,*/,{1022,1023,-150,0,0,0,0,0,0,0,0,0}
            /*,<variable> ::= ,*/,{-37,1025,1024,-150,0,0,0,0,0,0,0,0}
            /*,<inicia> ::= ,*/,{-99,-150,0,0,0,0,0,0,0,0,0,0}
            /*,<inicia> ::= ,*/,{1035,-41,-150,0,0,0,0,0,0,0,0,0}
            /*,<multiVar> ::= ,*/,{-99,-150,0,0,0,0,0,0,0,0,0,0}
            /*,<multiVar> ::= ,*/,{1025,1024,-1,-36,-150,0,0,0,0,0,0,0}
            /*,<invocacion> ::= ,*/,{-99,-150,0,0,0,0,0,0,0,0,0,0}
            /*,<invocacion> ::= ,*/,{-37,-35,1029,-34,1028,-1,-150,0,0,0,0,0}
            /*,<invocaVar> ::= ,*/,{-99,-150,0,0,0,0,0,0,0,0,0,0}
            /*,<invocaVar> ::=,*/,{-35,1029,-34,1028,-150,0,0,0,0,0,0,0}
            /*,<invAtrib> ::=,*/,{-99,-150,0,0,0,0,0,0,0,0,0,0}
            /*,<invAtrib> ::= ,*/,{-1,-39,-150,0,0,0,0,0,0,0,0,0}
            /*,<invParams> ::= ,*/,{1030,1035,-150,0,0,0,0,0,0,0,0,0}
            /*,<mulInvParams> ::= ,*/,{-99,-150,0,0,0,0,0,0,0,0,0,0}
            /*,<mulInvParams> ::=,*/,{1030,1035,-36,-150,0,0,0,0,0,0,0,0}
            /*,<asignaciones> ::=,*/,{-99,-150,0,0,0,0,0,0,0,0,0,0}
            /*,<asignaciones> ::=,*/,{1031,1032,-150,0,0,0,0,0,0,0,0,0}
            /*,<asignacion> ::=,*/,{-37,1024,1027,-1,1033,-150,0,0,0,0,0,0}
            /*,<this> ::= ,*/,{-99,-150,0,0,0,0,0,0,0,0,0,0}
            /*,<this>::=,*/,{-39,-87,-150,0,0,0,0,0,0,0,0,0}
            /*,<invClases> ::= ,*/,{-99,-150,0,0,0,0,0,0,0,0,0,0}
            /*,<invClases> ::= ,*/,{-37,-35,1029,-34,1028,-1,-75,-41,-1,-150,0,0}
            /*,<valor> ::=,*/,{1037,1036,-150,0,0,0,0,0,0,0,0,0}
            /*,<termino> ::=,*/,{1027,-1,-150,0,0,0,0,0,0,0,0,0}
            /*,<termino> ::= ,*/,{-2,-150,0,0,0,0,0,0,0,0,0,0}
            /*,<termino> ::= ,*/,{-3,-150,0,0,0,0,0,0,0,0,0,0}
            /*,<termino> ::= ,*/,{-4,-150,0,0,0,0,0,0,0,0,0,0}
            /*,<termino> ::= ,*/,{-5,-150,0,0,0,0,0,0,0,0,0,0}
            /*,<operadores> ::= ,*/,{-99,-150,0,0,0,0,0,0,0,0,0,0}
            /*,<operadores> ::=,*/,{1035,1038,-150,0,0,0,0,0,0,0,0,0}
            /*,<operador> ::=,*/,{-6,-150,0,0,0,0,0,0,0,0,0,0}
            /*,<operador> ::=,*/,{-7,-150,0,0,0,0,0,0,0,0,0,0}
            /*,<operador> ::= ,*/,{-8,-150,0,0,0,0,0,0,0,0,0,0}
            /*,<operador> ::= ,*/,{-9,-150,0,0,0,0,0,0,0,0,0,0}
            /*,<operador> ::= ,*/,{-10,-150,0,0,0,0,0,0,0,0,0,0}
            /*,<operador> ::= ,*/,{-11,-150,0,0,0,0,0,0,0,0,0,0}
            /*,<sentencias> ::= ,*/,{-99,-150,0,0,0,0,0,0,0,0,0,0}
            /*,<sentencias> ::= ,*/,{1039,1040,-150,0,0,0,0,0,0,0,0,0}
            /*,<sentencia> ::= ,*/,{1041,-150,0,0,0,0,0,0,0,0,0,0}
            /*,<sentencia> ::= ,*/,{1043,-150,0,0,0,0,0,0,0,0,0,0}
            /*,<sentencia> ::= ,*/,{1051,-150,0,0,0,0,0,0,0,0,0,0}
            /*,<sentencia> ::= ,*/,{1057,-150,0,0,0,0,0,0,0,0,0,0}
            /*,<sentencia> ::= ,*/,{1056,-150,0,0,0,0,0,0,0,0,0,0}
            /*,<sentencia> ::= ,*/,{1058,-150,0,0,0,0,0,0,0,0,0,0}
            /*,<sentencia> ::= ,*/,{1062,-150,0,0,0,0,0,0,0,0,0,0}
            /*,<sentencia> ::= ,*/,{1066,-150,0,0,0,0,0,0,0,0,0,0}
            /*,<sentencia> ::= ,*/,{1031,-150,0,0,0,0,0,0,0,0,0,0}
            /*,<sentencia> ::=,*/,{1067,-150,0,0,0,0,0,0,0,0,0,0}
            /*,<sentencia> ::=,*/,{1068,-150,0,0,0,0,0,0,0,0,0,0}
            /*,<varInternas> ::= ,*/,{-99,-150,0,0,0,0,0,0,0,0,0,0}
            /*,<varInternas> ::= ,*/,{1041,1042,-150,0,0,0,0,0,0,0,0,0}
            /*,<varInterna> ::= ,*/,{-37,1025,1024,1034,-1,1021,-150,0,0,0,0,0}
            /*,<if> ::=,*/,{1049,-31,-30,-35,1044,-34,-67,-150,0,0,0,0}
            /*,<condicional> ::=,*/,{1046,1045,-150,0,0,0,0,0,0,0,0,0}
            /*,<condFactor> ::= ,*/,{-102,-150,0,0,0,0,0,0,0,0,0,0}
            /*,<condFactor> ::= ,*/,{-103,-150,0,0,0,0,0,0,0,0,0,0}
            /*,<condFactor> ::= ,*/,{1035,1047,1035,-150,0,0,0,0,0,0,0,0}
            /*,<termCond> ::= ,*/,{-99,-150,0,0,0,0,0,0,0,0,0,0}
            /*,<termCond> ::= ,*/,{1044,1048,-150,0,0,0,0,0,0,0,0,0}
            /*,<oprel> ::=,*/,{-12,-150,0,0,0,0,0,0,0,0,0,0}
            /*,<oprel> ::=,*/,{-13,-150,0,0,0,0,0,0,0,0,0,0}
            /*,<oprel> ::= ,*/,{-15,-150,0,0,0,0,0,0,0,0,0,0}
            /*,<oprel> ::= ,*/,{-14,-150,0,0,0,0,0,0,0,0,0,0}
            /*,<oprel> ::= ,*/,{-16,-150,0,0,0,0,0,0,0,0,0,0}
            /*,<oprel> ::= ,*/,{-17,-150,0,0,0,0,0,0,0,0,0,0}
            /*,<oplog> ::= ,*/,{-18,-150,0,0,0,0,0,0,0,0,0,0}
            /*,<oplog> ::= ,*/,{-19,-150,0,0,0,0,0,0,0,0,0,0}
            /*,<else> ::=,*/,{-99,-150,0,0,0,0,0,0,0,0,0,0}
            /*,<else> ::= ,*/,{1050,-59,-150,0,0,0,0,0,0,0,0,0}
            /*,<elseCond> ::= ,*/,{-31,1039,-30,-150,0,0,0,0,0,0,0,0}
            /*,<elseCond>::= ,*/,{1043,-150,0,0,0,0,0,0,0,0,0,0}
            /*,<for> ::= ,*/,{-31,1039,-30,-35,1054,-37,1044,1052,-34,-65,-150,0}
            /*,<forAsig> ::= ,*/,{1041,1053,-150,0,0,0,0,0,0,0,0,0}
            /*,<asigFor> ::= ,*/,{-99,-150,0,0,0,0,0,0,0,0,0,0}
            /*,<asigFor> ::=,*/,{-37,1024,-1,1033,-150,0,0,0,0,0,0,0}
            /*,<forInc> ::= ,*/,{1055,-1,-150,0,0,0,0,0,0,0,0,0}
            /*,<inc> ::=,*/,{-23,-150,0,0,0,0,0,0,0,0,0,0}
            /*,<inc> ::=,*/,{-24,-150,0,0,0,0,0,0,0,0,0,0}
            /*,<inc> ::= ,*/,{1035,-25,-150,0,0,0,0,0,0,0,0,0}
            /*,<inc> ::= ,*/,{1035,-26,-150,0,0,0,0,0,0,0,0,0}
            /*,<inc> ::= ,*/,{1035,-27,-150,0,0,0,0,0,0,0,0,0}
            /*,<inc> ::= ,*/,{1035,-28,-150,0,0,0,0,0,0,0,0,0}
            /*,<inc> ::= ,*/,{1035,-29,-150,0,0,0,0,0,0,0,0,0}
            /*,<while> ::= ,*/,{-31,1039,-30,-35,1044,-34,1056,-150,0,0,0,0}
            /*,<do> ::= ,*/,{-37,-35,1044,-34,-94,-31,1039,-30,-57,-150,0,0}
            /*,<switch> ::= ,*/,{-31,1059,-30,-35,1036,-34,-85,-150,0,0,0,0}
            /*,<casos> ::= ,*/,{-99,-150,0,0,0,0,0,0,0,0,0,0}
            /*,<casos>:: =,*/,{1061,1059,1060,-150,0,0,0,0,0,0,0,0}
            /*,<caso> ::= ,*/,{1067,1039,-38,1036,-50,-150,0,0,0,0,0,0}
            /*,<default> ::= ,*/,{-99,-150,0,0,0,0,0,0,0,0,0,0}
            /*,<default> ::=,*/,{1067,1039,-38,-56,-150,0,0,0,0,0,0,0}
            /*,<try> ::= ,*/,{1065,1063,-31,1039,-30,-91,-150,0,0,0,0,0}
            /*,<catch>::= ,*/,{1064,-31,1039,-30,-35,-1,-1,-34,-51,-150,0,0}
            /*,<catchs> ::= ,*/,{-99,-150,0,0,0,0,0,0,0,0,0,0}
            /*,<catchs> ::= ,*/,{1063,-150,0,0,0,0,0,0,0,0,0,0}
            /*,<finally> ::=,*/,{-99,-150,0,0,0,0,0,0,0,0,0,0}
            /*,<finally> ::= ,*/,{-31,1039,-30,-63,-150,0,0,0,0,0,0,0}
            /*,<return> ::= ,*/,{-37,1035,-80,-150,0,0,0,0,0,0,0,0}
            /*,<breaks> ::=,*/,{-37,-48,-150,0,0,0,0,0,0,0,0,0}
            /*,<continues> ::= ,*/,{-37,-55,-150,0,0,0,0,0,0,0,0,0}
            /*,<invParams> ::= ,*/,{-99,-150,0,0,0,0,0,0,0,0,0,0}

            };
  
        // Constructor de la clase, necesita la lista de tokens que genera el lexico

        public Sintactico(List<Token> listaTokenLexico)
        {
            //inicializo todo para poder empezar el analisis.
            listaError = new List<Error>();

            listaTokens = listaTokenLexico; // copia de la lista de tokens original
            listaTokens.Add(new Token() { Lexema = "$", Linea = 0, TipoToken = Tokens.Cadena, ValorToken = -150 });

            listaSintactico[0] = -110; // estoy insertando $
            listaSintactico[1] = 1000; // S

            intentosRecuperar = 0;
            tipoRecuperacion = TipoRepecuracion.Ninguna;
        }


        // sintactico        
        public void EjecutarSintactico(List<Token> listaTokens)
        {
            //incializo variables locales necesarias
            int renglon, columna = 0;
            int regla;
            do
            {
                if (listaSintactico[punteroSintactico] < 0)   // el elemento de la lista es un terminal (TOKEN)????
                {
                    if (listaSintactico[punteroSintactico] == -99)// es lamda ese terminal?
                    {
                        listaSintactico[punteroSintactico] = 0;
                        punteroSintactico--;
                    }

                    else if (listaSintactico[punteroSintactico] == listaTokens[punteroLexico].ValorToken)  // los dos elementos son iguales
                    {
                        if (listaSintactico[punteroSintactico] == -110)  // los dos son simbolo final ????$
                        {
                            revision = true;
                            if (error)
                                MessageBox.Show(@"Analisis Sintactico Terminado, Con Errores");
                            else
                                MessageBox.Show(@"Analisis Sintactico Terminado Correctamente");
                            break;
                        }
                        else    //MATCH (elemento)
                        {
                            //CODIDO ESCUCHADOR  ACTIVADO ALGUN MODO IN
                            //if (swSemantico != TipoSemantico.Ninguno)
                            //    CodigoSemantico();

                            listaSintactico[punteroSintactico] = 0;
                            punteroLexico++;
                            punteroSintactico--;
                            VerificarRecuperacion();
                        }
                    }
                    else  // si los dos terminales de la lista token y de la lista sintactico no son iguales
                    {
                        NuevoError(listaTokens, ref revision, 1);
                    }
                }
                else  // NUMERO POSITIVO : es la parte de traerme la regla del repositorio con ayuda de la matriz
                {
                    renglon = BuscarRenglon(listaSintactico[punteroSintactico]);
                    columna = BuscarColumna(listaTokens[punteroLexico].ValorToken);

                    regla = MatrizTransicionSintantico[renglon, columna];

                    if (regla > 0)  // llamamos a la insersion de reglas.
                    {
                        InsertarRegla(regla);
                         VerificarRecuperacion();
                    }
                    else  // ejecutarr el manejo de errores
                    {
                        if (intentosRecuperar < 1)
                        {
                            tipoRecuperacion = TipoRepecuracion.Sobra;
                        }
                        NuevoError(listaTokens, ref revision, regla);
                    }
                }
            } while (revision != true);

        }
        /// <summary>
        /// inserto las reglas al LIFO (estructa sintactica)
        /// </summary>
        /// <param name="regla"></param>
        private void InsertarRegla(int regla)
        {
            int i = 0;
            do
            {
                listaSintactico[punteroSintactico] =
                    RepositorioReglas[regla - 1, i];
                punteroSintactico++;

                i++;

            } while (RepositorioReglas[regla - 1, i] != -111);
            punteroSintactico--;
        }

        //private string[] palabra = { "abstract", "assert", "boolean", "break", "byte", "case", "catch", "char", "class", "const", "continue", "default", "do", "double", "else", "enum", "extends", "final", "finally", "float", "for", "goto", "if", "implements", "import", "instanceof", "int", "interface", "long", "native", "new", "package", "private", "protected", "public", "return", "short", "static", "strictfp", "super", "switch", "synchronized", "this", "throw", "throws", "transient", "try", "void", "volatile", "while", "System", "out", "print", "println", "sealed", "string", "true", "false", "nextLine", "nextDouble", "nextInt", "nextFloat", "next", "charAt" };
        private int[] tokens = { -1, -2, -3, -4, -5, -6, -7, -8, -9, -10, -11, -12, -13, -14, -15, -16, -17, -19, -20, -21, -22, -23, -24, -25, -26, -27, -28, -29, -18, -30, -31, -32, -33, -34, -35, -36, -37, -38, -39, -40, -41, -42, -43, -44, -45, -46, -47, -48, -49, -50, -51, -52, -53, -54, -55, -56, -57, -58, -59, -60, -61, -62, -63, -64, -65, -66, -67, -68, -69, -70, -71, -72, -73, -74, -75, -76, -77, -78, -79, -80, -81, -82, -83, -84, -85, -86, -87, -88, -89, -90, -91, -92, -93, -94, -95, -96, -97, -98, -100, -101, -102, -103, -104, -105, -106, -107, -108, -109, -110 };
        
        private int BuscarColumna(int token)
        {
            int columna = 0;
            for (int i = 0; i < tokens.Length; i++) {
                if (tokens[i] == token) {
                    columna = i;
                    Console.WriteLine(tokens[i]);
                     Console.WriteLine(token);
                    break;
                }
            }

            return columna;
        }
        //private string[] reglas ={"s","program","paquete","pack", "pack2","libreria","decLib","lib","lib2","clases","vclases","clase","tipoClase","herencia", "codigo", "atributos", "multiples", "alcance", "tipo", "asigna", "valor", "termino", "operadores", "operador", "metodos", "tipoMetodo", "parametros", "parametroSig", "sentencias", "sentencia", "if", "condicional", "condFactor", "termCond",  "oprel","oplog", "else","elseCond", "for", "decasig", "variable", "variableV", "asignacion", "incremento", "opasig","while","do" ,"escribe" ,"escribe2" ,"leer" ,"lectura" ,"lecOp" ,"invoca" ,"obj" ,"paramobj", "paramobj1","switch" ,"casos" ,"caso" ,"default"};
        private int[] tokenReglas = { 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064 };
      
        private int BuscarRenglon(int regla)
        {
            int renglon = -1;
            for (int i = 0; i < tokenReglas.Length; i++)
            {
                if (tokenReglas[i] == regla)
                {
                    Console.WriteLine(tokenReglas[i]);
                    Console.WriteLine(regla);
                    renglon = i;
                    break;
                }
            }
            if (renglon != -1) { return renglon; } else { throw new Exception("error de logica"); }
        }

        private void NuevoError(List<Token> listaTokens, ref bool revision, int tipo)
        {
            error = true;
            var nuevoError = ManejodeErrores(tipo, listaTokens[punteroLexico].Linea);
            listaError.Add(nuevoError);
            revision = true;
            Recuperar(ref revision, ref tipoRecuperacion);

        }

        private void VerificarRecuperacion()
        {
            if (tipoRecuperacion != TipoRepecuracion.Ninguna)
            {
                tipoRecuperacion = TipoRepecuracion.Ninguna;
                intentosRecuperar = 0;
            }
        }

        private Error ManejodeErrores(int error, int linea)
        {
            string mensajeError = "";
            switch (error)
            {
                case 1:  // cuando son terminales 
                    mensajeError = "se esperaba el simbolo: " + listaSintactico[punteroSintactico];
                    break;
                case -600:
                    mensajeError = "Se esperaba una estructura de clase o libreria.";
                    break;
                case -601:
                    mensajeError = "Se esperaba una estructura de libreria.";
                    break;
                case -602:
                    mensajeError = "Se esperaba una estructura de herencia.";
                    break;
                case -603:
                    mensajeError = "Se esperaba un miembro de una clase.";
                    break;
                case -604:
                    mensajeError = "Se esperaba una estructura de clase ";
                    break;
                case -605:
                    mensajeError = "Se esperaba un alcance ";
                    break;

                default:
                    break;
            }
            return new Error() { Codigo = error, MensajeError = mensajeError, Tipo = tipoError.Sintactico, Linea = linea };

        }
        private void Recuperar(ref bool revision, ref TipoRepecuracion tipo)
        {
            if (intentosRecuperar > 3)
            {
                tipo = TipoRepecuracion.NoMas;
            }

            intentosRecuperar++;

            switch (tipo)
            {
                case TipoRepecuracion.Ninguna:
                    punteroSintactico--;
                    tipo++;
                    break;
                case TipoRepecuracion.Falta:
                    punteroSintactico--;  // muevo sintactio
                    if (intentosRecuperar == 3)
                    {
                        punteroSintactico += 3;
                        tipo = TipoRepecuracion.Diferentes;
                    }
                    break;
                case TipoRepecuracion.Sobra:
                    if (intentosRecuperar == 3)
                    {
                        punteroLexico -= 2;
                        tipo = TipoRepecuracion.Falta;
                    }
                    punteroLexico++;  // muevo lexico
                    break;
                case TipoRepecuracion.Diferentes:
                    punteroLexico++;   // muevo ambos
                    punteroSintactico--;
                    break;

                default:
                    revision = true;
                    MessageBox.Show(@"Analisis Sintactico no se recupero, paro fulminante");
                    break;
            }
        }
    }
}

